// <auto-generated />
using System;
using ManejoAlquileres;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManejoAlquileres.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250603224101_GenerateAdmins")]
    partial class GenerateAdmins
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManejoAlquileres.Models.Contrato", b =>
                {
                    b.Property<string>("Id_contrato")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Aval")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Clausula_prorroga")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("Comision_inmobiliaria")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Fecha_fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_max_revision")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fianza")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Id_habitacion")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Id_propiedad")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Periodicidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Porcentaje_incremento")
                        .HasPrecision(5, 4)
                        .HasColumnType("decimal(5,4)");

                    b.Property<string>("Tipo_Alquiler")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_contrato");

                    b.HasIndex("Id_habitacion");

                    b.HasIndex("Id_propiedad");

                    b.ToTable("Contratos", (string)null);
                });

            modelBuilder.Entity("ManejoAlquileres.Models.ContratoInquilino", b =>
                {
                    b.Property<string>("ContratoId")
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("ContratoId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ContratosInquilinos", (string)null);
                });

            modelBuilder.Entity("ManejoAlquileres.Models.ContratoPropietario", b =>
                {
                    b.Property<string>("ContratoId")
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("ContratoId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ContratosPropietarios", (string)null);
                });

            modelBuilder.Entity("ManejoAlquileres.Models.GastoInmueble", b =>
                {
                    b.Property<string>("Id_gasto")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Fecha_pago")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id_propiedad")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<decimal>("Monto_gasto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Porcentaje_amortizacion")
                        .HasPrecision(5, 4)
                        .HasColumnType("decimal(5,4)");

                    b.Property<bool>("Repercutible")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo_gasto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id_gasto");

                    b.HasIndex("Id_propiedad");

                    b.ToTable("GastosInmueble", (string)null);
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Habitacion", b =>
                {
                    b.Property<string>("Id_habitacion")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<bool>("Bano_propio")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<string>("Id_propiedad")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<decimal>("Tamaño")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id_habitacion");

                    b.HasIndex("Id_propiedad");

                    b.ToTable("Habitaciones", (string)null);
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Pago", b =>
                {
                    b.Property<string>("Id_pago")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Archivo_factura")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Fecha_pago_programada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_pago_real")
                        .HasColumnType("datetime2");

                    b.Property<string>("Id_contrato")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<decimal>("Monto_pago")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id_pago");

                    b.HasIndex("Id_contrato");

                    b.ToTable("Pagos", (string)null);
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Propiedad", b =>
                {
                    b.Property<string>("Id_propiedad")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Estado_propiedad")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_adquisicion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Referencia_catastral")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Valor_adqui_total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Valor_adquisicion")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Valor_catastral_piso")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Valor_catastral_terreno")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("numHabitaciones")
                        .HasColumnType("int");

                    b.HasKey("Id_propiedad");

                    b.ToTable("Propiedades", (string)null);
                });

            modelBuilder.Entity("ManejoAlquileres.Models.PropiedadUsuario", b =>
                {
                    b.Property<string>("PropiedadId")
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(9)");

                    b.Property<decimal>("PorcentajePropiedad")
                        .HasPrecision(5, 4)
                        .HasColumnType("decimal(5,4)");

                    b.HasKey("PropiedadId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PropiedadesUsuarios", (string)null);
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Usuario", b =>
                {
                    b.Property<string>("Id_usuario")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("EsAdministrador")
                        .HasColumnType("bit");

                    b.Property<string>("Informacion_bancaria")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NIF")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id_usuario");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id_usuario = "admin0001",
                            Apellidos = "Administrador Uno",
                            Contraseña = "123456",
                            Direccion = "Calle Admin 1",
                            Email = "admin1@example.com",
                            EsAdministrador = true,
                            Informacion_bancaria = "111111111111111111",
                            NIF = "12345678A",
                            Nombre = "Admin1",
                            Telefono = "600000001"
                        },
                        new
                        {
                            Id_usuario = "admin0002",
                            Apellidos = "Administrador Dos",
                            Contraseña = "123456",
                            Direccion = "Calle Admin 2",
                            Email = "admin2@example.com",
                            EsAdministrador = true,
                            Informacion_bancaria = "22222222222222222222",
                            NIF = "12345678B",
                            Nombre = "Admin2",
                            Telefono = "600000002"
                        },
                        new
                        {
                            Id_usuario = "admin0003",
                            Apellidos = "Administrador Tres",
                            Contraseña = "123456",
                            Direccion = "Calle Admin 3",
                            Email = "admin3@example.com",
                            EsAdministrador = true,
                            Informacion_bancaria = "33333333333333333333",
                            NIF = "12345678C",
                            Nombre = "Admin3",
                            Telefono = "600000003"
                        });
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Contrato", b =>
                {
                    b.HasOne("ManejoAlquileres.Models.Habitacion", "Habitacion")
                        .WithMany("Contratos")
                        .HasForeignKey("Id_habitacion")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ManejoAlquileres.Models.Propiedad", "Propiedad")
                        .WithMany("Contratos")
                        .HasForeignKey("Id_propiedad")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Habitacion");

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("ManejoAlquileres.Models.ContratoInquilino", b =>
                {
                    b.HasOne("ManejoAlquileres.Models.Contrato", "Contrato")
                        .WithMany("Inquilinos")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManejoAlquileres.Models.Usuario", "Usuario")
                        .WithMany("ContratosComoInquilino")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ManejoAlquileres.Models.ContratoPropietario", b =>
                {
                    b.HasOne("ManejoAlquileres.Models.Contrato", "Contrato")
                        .WithMany("Propietarios")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManejoAlquileres.Models.Usuario", "Usuario")
                        .WithMany("ContratosComoPropietario")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ManejoAlquileres.Models.GastoInmueble", b =>
                {
                    b.HasOne("ManejoAlquileres.Models.Propiedad", "Propiedad")
                        .WithMany("Alquileres")
                        .HasForeignKey("Id_propiedad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Habitacion", b =>
                {
                    b.HasOne("ManejoAlquileres.Models.Propiedad", "Propiedad")
                        .WithMany("Habitaciones")
                        .HasForeignKey("Id_propiedad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Pago", b =>
                {
                    b.HasOne("ManejoAlquileres.Models.Contrato", "Contrato")
                        .WithMany("Pagos")
                        .HasForeignKey("Id_contrato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("ManejoAlquileres.Models.PropiedadUsuario", b =>
                {
                    b.HasOne("ManejoAlquileres.Models.Propiedad", "Propiedad")
                        .WithMany("Usuarios")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManejoAlquileres.Models.Usuario", "Usuario")
                        .WithMany("Propiedades")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Contrato", b =>
                {
                    b.Navigation("Inquilinos");

                    b.Navigation("Pagos");

                    b.Navigation("Propietarios");
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Habitacion", b =>
                {
                    b.Navigation("Contratos");
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Propiedad", b =>
                {
                    b.Navigation("Alquileres");

                    b.Navigation("Contratos");

                    b.Navigation("Habitaciones");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ManejoAlquileres.Models.Usuario", b =>
                {
                    b.Navigation("ContratosComoInquilino");

                    b.Navigation("ContratosComoPropietario");

                    b.Navigation("Propiedades");
                });
#pragma warning restore 612, 618
        }
    }
}
