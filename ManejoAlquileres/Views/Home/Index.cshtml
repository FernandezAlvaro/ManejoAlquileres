<!-- Estilos de FullCalendar -->
<link href="~/lib/fullcalendar/main.min.css" rel="stylesheet" />
<!-- Scripts -->
<script src="~/lib/fullcalendar/main.min.js"></script>
<script src="~/lib/fullcalendar/locales/es.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Contenedor principal -->
<div class="calendar-container mt-4" style="min-height: 600px; border: 1px solid #ccc;"></div>

<!-- Leyenda de colores -->
<div class="color-legend mt-3">
    <strong>Leyenda de colores:</strong>
    <ul>
        <li><span class="color-box" style="background:#ff6666;"></span>Pagos pendientes por realizar (debe pagar)</li>
        <li><span class="color-box" style="background:#3366cc;"></span>Pagos pendientes por recibir (debe recibir)</li>
        <li><span class="color-box" style="background:#66b266;"></span>Pagos ya realizados</li>
    </ul>
</div>

<!-- Botón de exportar -->
<div class="mt-3 text-center">
    <a href="@Url.Action("ExportarVista", "Home")" class="btn btn-success">
        Exportar
    </a>
</div>

<!-- Estilos Responsivos -->
<style>
    .calendar-container {
        width: 100%;
        max-width: 100%;
        overflow-x: auto;
    }

    .color-legend {
        font-family: Arial, sans-serif;
        font-size: 14px;
        padding: 0 10px;
    }

        .color-legend ul {
            list-style: none;
            padding-left: 0;
            margin-top: 5px;
        }

        .color-legend li {
            display: flex;
            align-items: center;
            margin-bottom: 4px;
        }

    .color-box {
        display: inline-block;
        width: 15px;
        height: 15px;
        margin-right: 8px;
        border-radius: 3px;
        flex-shrink: 0;
    }

    @@media (max-width: 576px) {
        .color-legend {
            font-size: 13px;
        }

        .swal2-popup {
            font-size: 14px !important;
        }

        .btn-success {
            width: 100%;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', async function () {
        try {
            const response = await fetch('/Home/ObtenerPagosCalendario');
            const eventos = await response.json();
            console.log("Eventos obtenidos:", eventos);

            const calendarEl = document.querySelector('.calendar-container');
            const initialView = window.innerWidth < 576 ? 'listWeek' : 'dayGridMonth';

            // Hacemos el calendario global para que pueda actualizarse en otros eventos
            window.calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: initialView,
                locale: 'es',
                height: 'auto',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,listWeek'
                },
                events: eventos,
                eventClick: function (info) {
                    const e = info.event.extendedProps;
                    let html = `
                        <p><strong>Descripción:</strong> ${e.descripcion ?? 'Sin descripción'}</p>
                        <p><strong>Monto:</strong> ${e.monto}€</p>
                        <p><strong>Fecha programada:</strong> ${e.fecha}</p>
                        <p><strong>Tipo:</strong> ${e.tipo}</p>`;

                    if (e.archivo) {
                        html += `<p><a href="/${e.archivo}" download>Descargar archivo</a></p>`;
                    }

                    Swal.fire({
                        title: 'Detalle del Pago',
                        html: html,
                        icon: 'info',
                        confirmButtonText: 'Cerrar'
                    });
                }
            });

            calendar.render();

            // Actualiza el tamaño al cargar por si ya está colapsado
            setTimeout(() => {
                calendar.updateSize();
            }, 200);

        } catch (error) {
            console.error("Error al cargar eventos del calendario:", error);
            Swal.fire("Error", "No se pudieron cargar los eventos.", "error");
        }
    });
</script>